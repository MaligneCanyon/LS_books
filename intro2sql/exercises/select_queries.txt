ex1
\c encyclopedia
SELECT population FROM countries WHERE name = 'USA';

ex2
SELECT population, capital FROM countries;

ex3
SELECT name FROM countries ORDER BY name;

ex4
SELECT name, capital FROM countries ORDER BY population; # ASC is default

ex5
SELECT name, capital FROM countries ORDER BY population DESC;

ex6
SELECT name, binomial_name, max_weight_kg, max_age_years FROM animals ORDER BY max_age_years, max_weight_kg, name DESC;

ex7
SELECT name, population FROM countries WHERE population > 70000000;

ex8
SELECT name, population FROM countries WHERE population > 70000000 AND population < 200000000;

ex9
SELECT first_name, last_name FROM celebrities WHERE deceased <> true OR deceased IS NULL;

ex10
SELECT first_name, last_name FROM celebrities WHERE occupation LIKE '%ing%';

- to allow for upper and lowercase in occupation, could use
SELECT first_name, last_name FROM celebrities WHERE lower(occupation) LIKE '%sing%';

ex11
SELECT first_name, last_name FROM celebrities WHERE occupation LIKE '%Act%';

ex12
SELECT first_name, last_name FROM celebrities WHERE occupation LIKE '%Act%' AND occupation LIKE '%ing%';

ex13
\c ls_burger
SELECT burger FROM orders WHERE burger_cost < 5.00 ORDER BY burger_cost;

ex14
SELECT customer_name, customer_email, customer_loyalty_points FROM orders WHERE customer_loyalty_points >= 20 ORDER BY customer_loyalty_points DESC;

ex15
SELECT burger FROM orders WHERE customer_name = 'Natasha O''Shea';
# or
SELECT burger FROM orders WHERE customer_name LIKE 'Natasha%';

ex16
SELECT customer_name FROM orders WHERE drink IS NULL;
# note that
SELECT customer_name FROM orders WHERE drink = NULL;
# executes w/o err, but rtns 0 rows (incorrect)

ex17
SELECT burger, side, drink FROM orders WHERE side <> 'Fries' OR side IS NULL;

ex18
SELECT burger, side, drink FROM orders WHERE side IS NOT NULL AND drink IS NOT NULL;
